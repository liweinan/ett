<% unless session[:cloned_packages].blank? %>
    Cloned Packages:
    <% session[:cloned_packages].each do |pack| %>
        <%= pack %> /
    <% end %>
    <% session[:cloned_packages] = nil %>
<% end %>
<%= render :partial => 'layouts/sep' %>
<% unless session[:not_cloned_packages].blank? %>
    Not Cloned Packages:
    <% session[:not_cloned_packages].keys.each do |key| %>
        <%= key %><%#session[:clone_reports][key]%> /
    <% end %>
    <% session[:not_cloned_packages] = nil %>
<% end %>

<% cache :action => 'index', :id => "#{params[:product_id]}#{params[:label]}#{params[:mark]}#{params[:user]}#{current_user_email}" do %>
    <% if has_tag? %>
        <% @product = Product.find_by_name(unescape_url(params[:product_id])) %>
        <h2>
          Listing packages of <%= unescape_url(params[:product_id]) %>
          <% if has_label? %>
              / <%= unescape_url(params[:label]) %>
          <% end %>
          <% if has_mark? %>
              / <%= unescape_url(params[:mark]) %>
          <% end %>
        </h2>
        <% unless @product.description.blank? %>
            <%= @product.description %>
        <% end %>
    <% else %>
        <h2>Listing packages</h2>
    <% end %>

    <%= render :partial => 'ops' %>

    <%= render :partial => 'layouts/sep' %>

    Labels:
    <%= link_to "All (#{@all_packages_count})", :controller => :packages, :action => :index, :product_id => params[:product_id] %> /

    <% if logged_in? %>
        <%= link_to "My (#{@my_packages_count})", :controller => :packages, :action => :index, :product_id => params[:product_id], :user => session[:current_user].email %> /
    <% end %>

    <% Label.find_all_can_show_by_product_id_in_global_scope(Product.find_by_name(unescape_url(params[:product_id])).id).each do |label| %>
        <%= link_to "#{label.name} (#{count_packages(unescape_url(params[:product_id]), label.name)})", :controller => :packages, :action => :index, :product_id => params[:product_id], :label => escape_url(label.name) %> /
    <% end %>
    <%= render :partial => 'layouts/sep' %>
    <% marks = Product.find_by_name(unescape_url(params[:product_id])).marks %>
    <% unless marks.blank? %>
        Marks:
        <% marks.each do |mark| %>
            <%= link_to "#{mark.key} (#{mark.packages_can_show.size})", :controller => :packages, :action => :index, :product_id => params[:product_id], :mark => mark.key %> /
        <% end %>
    <% end %>

    <%= render :partial => 'layouts/sep' %>
    <span id="inline_editor_switch" style="display:none;">
      <a href="javascript:void(0);" onclick="getPacBtns();">
        [ENABLE INLINE EDITOR]
      </a>
    </span>
    <%= render :partial => 'layouts/progress_indicator', :locals => {:progress_indicator_id => "inline_editor_indicator"} %>

    <%= render :partial => 'layouts/sep' %>
    <span style="background-color:#91f59e;">&nbsp;</span> - Manual time track started
    <span style="background-color:#db4e56;">&nbsp;</span> - Manual time track stopped
    <div class='manage-tbl'>
      <%= render :partial => 'layouts/sep' %>
      <table>
        <%= render :partial => 'packages/index/header', :locals => {:col => 'th'} %>
        <% @packages.each_with_index do |package, i| %>
            <% if i % 25 == 0 && i > 0 %>
                <%= render :partial => 'packages/index/header', :locals => {:col => 'td'} %>
            <% end %>
            <tr>
              <% @show_progress = true %>
              <% if logged_in? %>
                  <%= render :partial => 'packages/index/ops', :locals => {:package => package} %>
              <% end %>
              <%= render :partial => 'packages/index/name', :locals => {:package => package} %>
              <%= render :partial => 'packages/index/label', :locals => {:package => package} %>
              <%= render :partial => 'packages/index/mark', :locals => {:package => package} %>
              <%= render :partial => 'packages/index/user', :locals => {:package => package} %>
              <%= render :partial => 'packages/index/xattr', :locals => {:package => package} %>
            </tr>
        <% end %>
      </table>
    </div>
<% end %>
<%= render :partial => 'layouts/sep' %>


<% if logged_in? %>
    <!--The following codes are all for inline editors-->
    <% content_for :js do %>
        <script type="text/javascript">
            function show_pac_editor(div, pac_id, field_name, field_type, is_xattr) {
                Element.hide(div + '_field');
                Element.hide(build_pac_btn_id(div, field_type, is_xattr));
                new Ajax.Request('/toolbox/get_pac_form',
                        {
                            asynchronous: true,
                            evalScripts: true,
                            onLoading: function (request) {
                                Element.show(div + '_indicator');
                            },
                            onSuccess: function (response) {
                                Element.hide(div + '_indicator');
                            },
                            parameters: {
                                'form_id': div + '_editor',
                                'pac_id': pac_id,
                                'field_name': field_name,
                                'field_type': field_type,
                                'is_xattr': is_xattr,
                                'authenticity_token': '<%=form_authenticity_token%>'}
                        });
                Element.show(div + '_editor');
                Element.setStyle(div + '_td', {'text-decoration': 'none', 'background': 'none'});
                document.getElementById(div + "_switch").innerHTML = 'off';
            }

            function hide_pac_editor(div, field_type, is_xattr) {
                Element.show(div + '_field');
                Element.show(build_pac_btn_id(div, field_type, is_xattr));
                Element.hide(div + '_editor');
                document.getElementById(div + "_switch").innerHTML = 'on';
            }

            function show_pac_btn(div, field_type, is_xattr) {
                if (document.getElementById(div + "_switch").innerHTML == 'on')
                    Element.show(build_pac_btn_id(div, field_type, is_xattr));
            }

            function hide_pac_btn(div, field_type, is_xattr) {
                if (document.getElementById(div + "_switch").innerHTML == 'on')
                    Element.hide(build_pac_btn_id(div, field_type, is_xattr));
            }

            function build_pac_btn_id(div, field_type, is_xattr) {
                return div + '_-' + field_type + '-' + is_xattr + '-_btn';
            }

            function getPacBtns() {
                // get the [EDIT] link, and inject each editable columns
                var pacBtns = document.getElementsByRegex('^pac.*btn');

                // inject [EDIT] link switch
                var pacBtnSwitches = document.getElementsByRegex('^pac.*switch');
                new Ajax.Request('/toolbox/get_initial_pac_btn_switch',
                        {
                            asynchronous: true,
                            evalScripts: true,
                            onLoading: function (request) {
                                document.getElementById('inline_editor_switch').innerHTML = "LOADING INLINE EDITOR...";
                                Element.show('inline_editor_indicator');
                            },
                            parameters: {
                                'ids': pacBtnSwitches.toString(),
                                'authenticity_token': '<%=form_authenticity_token%>'}
                        });

                new Ajax.Request('/toolbox/get_pac_btns',
                        {
                            asynchronous: true,
                            evalScripts: true,
                            onSuccess: function (response) {
                                Element.hide('inline_editor_indicator');
                                document.getElementById('inline_editor_switch').innerHTML = '<span style="color:#228b22;">[INLINE EDITOR ENABLED]</span>';
                                new Effect.Highlight('inline_editor_switch', { duration: 1 });

                            },
                            parameters: {
                                'ids': pacBtns.toString(),
                                'authenticity_token': '<%=form_authenticity_token%>'}
                        });
            }

            Event.observe(window, 'load', function () {
                Element.show('inline_editor_switch');
            });

            function showLog(pac_id) {
                new Ajax.Request('/toolbox/show_log_dialog',
                        {
                            asynchronous: true,
                            evalScripts: true,
                            onLoading: function (request) {
                                Element.show('log_area_indicator_' + pac_id);
                            },
                            onSuccess: function (response) {
                                Element.hide('log_area_indicator_' + pac_id);
                                Element.show('log_area_' + pac_id);
                            },
                            parameters: {
                                'id': pac_id,
                                'authenticity_token': '<%=form_authenticity_token%>'
                            }
                        });
            }

            function showCommentDialog(pac_id) {
                new Ajax.Request('/toolbox/show_comment_dialog',
                        {
                            asynchronous: true,
                            evalScripts: true,
                            onLoading: function (request) {
                                Element.show('comment_area_indicator_' + pac_id);
                            },
                            onSuccess: function (response) {
                                Element.hide('comment_area_indicator_' + pac_id);
                                Element.show('comment_area_' + pac_id);
                            },
                            parameters: {
                                'id': pac_id,
                                'authenticity_token': '<%=form_authenticity_token%>'
                            }
                        });
            }
        </script>


    <% end %>
<% else %>
    <% content_for :js do %>
        <script type="text/javascript">
            function show_pac_editor(div, pac_id, field_name, field_type, is_xattr) {
            }
            function hide_pac_editor(div, field_type, is_xattr) {
            }
            function show_pac_btn(div, field_type, is_xattr) {
            }
            function hide_pac_btn(div, field_type, is_xattr) {
            }
            function build_pac_btn_id(div, field_type, is_xattr) {
            }
            function showCommentDialog(pac_id) {

            }
        </script>
    <% end %>
<% end %>

<% content_for :js do %>
    <script type="text/javascript">
        function getTimeTrackingComponents() {
            var comps = document.getElementsByRegex('^manual_time_track_component_.*btn');
            new Ajax.Request('/toolbox/get_manual_time_track_components',
                    {
                        asynchronous: true,
                        evalScripts: true,
                        parameters: {
                            'ids': comps.toString(),
                            'authenticity_token': '<%=form_authenticity_token%>'}
                    });
        }

        Event.observe(window, 'load', function () {
            getTimeTrackingComponents();
        });
    </script>

    <%= render :partial => 'time_tracking_js' %>
<% end %>
