# this is needed because brew wants the properties to be separated by a newline
# we also request the key so that we can add the proper number of spaces to
# align the text
def text_to_add(key, value)
  len_key = key.strip.size
  # the '3' is because when the ini parse is generated, it is '<key> = '
  # so the ' = ' takes 3 spaces
  value = value.strip
  newline_length = len_key + 3
  substitute_space_with_newline_and_space = "\n" + (" " * newline_length)
  new_val = value.gsub(/\s+/, substitute_space_with_newline_and_space)
  return new_val
end

def add_if_not_nil(vehicle, key, item)
  if !item.nil? || item.strip() != ''
    puts "#{key}:: =#{item}= =#{item.strip() != ''}="
  end
  vehicle.option(key, text_to_add(key, item)) if !item.nil? && item.strip() != ''
end

pac = Package.find(params[:package_id])
pac.ini_file = IniParse.gen do |doc|
  doc.section(params['maven_group_artifact']) do |vehicle|
    add_if_not_nil(vehicle, "scmurl", pac.git_url)

    add_if_not_nil(vehicle, "patches", ".") if params["patches"]["enabled"] == "1"
    add_if_not_nil(vehicle, "buildrequires", params["buildrequires"])
    add_if_not_nil(vehicle, "profiles", params["profiles"])

    goals = params["goals"] || ""
    properties = params["properties"] || "version.incremental.suffix=redhat"

    add_if_not_nil(vehicle, "goals", goals)
    add_if_not_nil(vehicle, "properties", properties)
    add_if_not_nil(vehicle, "maven_options", params["maven_options"])
    add_if_not_nil(vehicle, "envs", params["envs"])
    add_if_not_nil(vehicle, "jvm_options", params["jvm_options"])
  end
end.to_ini
pac.save
page.alert("SUCCESS! The edited ini file will be commited to the rpm repository when you press 'Submit Build'")
page << "TINY.box.hide()"

