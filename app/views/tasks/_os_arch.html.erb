<div class='manage-tbl'>
  <table id='bz_list_tbl'>
    <%= render :partial => 'tasks/os_arch/header' %>
    <% task_os_adv_tags = @task.sorted_os_advisory_tags %>
    <% if task_os_adv_tags.size == 0 %>
        <%= render :partial => 'tasks/os_arch/row', :locals => {:count => 0, :default_val => OsAdvisoryTag.new} %>
    <% elsif task_os_adv_tags.size > 0 %>
        <% task_os_adv_tags.each_with_index do |os_adv_tag, count| %>
            <%= render :partial => 'tasks/os_arch/row', :locals => {:count => count, :default_val => os_adv_tag} %>
        <% end %>
    <% end %>
    <tr>
      <td id="col_add_new" class="small_font" colspan="5" style="text-align: right">
        <input type="button" onclick="add_new_row();" onsubmit="false;" value="Add New Row"></input>

        <input type="button" onclick="delete_last_row();" onsubmit="false;" value="Delete Last Row"></input>
      </td>
    </tr>
  </table>
</div>

<% content_for :js do %>
<script>
    function add_new_row() {
        var tbl = document.getElementById('bz_list_tbl');
        var rowCnt = tbl.rows.length;
        var row = tbl.insertRow(rowCnt - 1);
        row.id = 'bz_list_row_' + rowCnt;

        var colOs = row.insertCell(0);
        colOs.id = "col_os" + rowCnt;
        renderOs(rowCnt, colOs);

        var colAdvisory = row.insertCell(1);
        colAdvisory.id = "col_advisory" + rowCnt;
        renderAdvisory(rowCnt, colAdvisory);

        var colTargetTag = row.insertCell(2);
        colTargetTag.id = "col_target_tag" + rowCnt;
        renderTargetTag(rowCnt, colTargetTag);

        var colBuildTag = row.insertCell(3);
        colBuildTag.id = "col_build_tag" + rowCnt;
        renderBuildTag(rowCnt, colBuildTag);

        var colCandidateTag = row.insertCell(4);
        colCandidateTag.id = "col_candidate_tag" + rowCnt;
        renderCandidateTag(rowCnt, colCandidateTag);

        Element.show(row);
        Element.highlight(row);
    }

    function renderOs(rowCnt, colOs) {
        renderPartial(rowCnt, colOs.id, 'tasks/os_arch/os_box');
    }

    function renderAdvisory(rowCnt, col) {
        renderPartial(rowCnt, col.id, 'tasks/os_arch/advisory_box');
    }

    function renderBuildTag(rowCnt, col) {
        renderPartial(rowCnt, col.id, 'tasks/os_arch/build_tag');
    }

    function renderTargetTag(rowCnt, col) {
        renderPartial(rowCnt, col.id, 'tasks/os_arch/target_tag');
    }

    function renderCandidateTag(rowCnt, col) {
        renderPartial(rowCnt, col.id, 'tasks/os_arch/candidate_tag');
    }

    function renderPartial(count, div_id, partial) {
        new Ajax.Request('/tasks/render_partial/' + count, {
            method: 'GET',
            asynchronous: true,
            evalScripts: true,
            onSuccess: function (response) {
                var content = response.responseText;
                var div = document.getElementById(div_id);
                div.innerHTML = content;
                Element.show(div);
                Element.highlight(div);
            },
            parameters: {
                "count": count,
                "partial": partial
            }
        });
    }

    function delete_last_row() {
        var tbl = document.getElementById('bz_list_tbl');
        var rowCnt = tbl.rows.length;
        if (rowCnt > 3) {
            tbl.deleteRow(rowCnt - 2);
        } else if (rowCnt == 3) {
            // We just clear the last row, but don't delete it from UI.
            // The function is not affected.
            lastRow = tbl.rows[1];
            boxes = document.getObjectsByClass(HTMLInputElement, lastRow);
            for (i = 0; i < boxes.length; i++) {
                boxes[i].value = "";
            }
        }
    }
</script>
<% end %>